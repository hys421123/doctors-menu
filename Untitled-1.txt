<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fiberhome.ms.imc.patient.dao.PatientDao">
	<!-- <cache /> -->

	<!-- ///////////////////////////基础接口定义///////////////////////////////// -->
	
	<select id="getById" resultType="com.fiberhome.ms.imc.patient.entity.Patient">
		SELECT
		T.*
		FROM T_PATIENT_DEMO T
		WHERE T.ID = #{id} 
			
	</select>
	
	
	<select id="getByIds" resultType="com.fiberhome.ms.imc.patient.entity.Patient">
		SELECT
		T.*
		FROM T_PATIENT_DEMO T
		WHERE T.ID in
		<foreach item="id" collection="ids" open="(" separator="," close=")">
		  #{id}
		</foreach>
			
	</select>

	<select id="getCount" resultType="int">
		SELECT
			count(1)
		FROM T_PATIENT_DEMO T
	
			<filter open="where (" close=")" />
	</select>

	<select id="selectAll" resultType="com.fiberhome.ms.imc.patient.entity.Patient">
		SELECT
		T.*
		FROM T_PATIENT_DEMO T
		
			<filter open="where (" close=")" />
	</select>

	<select id="select" pageable="true" resultType="com.fiberhome.ms.imc.patient.entity.Patient">
		SELECT T.* FROM T_PATIENT_DEMO T
	
			<filter open="where (" close=")" />
	</select>
	
	<!-- 插入语句  -->
	<sql id="base_insert_sql">
		INSERT INTO T_PATIENT_DEMO (
			ID,TREAT_TIMES,NAME,
			GENDER,BIRTHDATE,PHONENUM,
			CREATE_DATE,CARD_TYPE,CARD_NUM,
			BIRTHPLACE,COUNTRY,NATIONALITY,
			MARRIAGE,EDUCATION,PATIENTS_SOURCE,
			PROVINCE,CITY,DISTRICT,
			DETAIL_ADDRESS,FAMILY_PHONE,PROFESSION,
			IDENTITY,COMPANY,COMPANY_PHONE,
			EMAIL,CONTACT_NAME,CONTACT_ADDRESS,
			CONTACT_PHONE,CONTACT_RELATION,PAYMENT_METHOD,
			CLIENT_LEVEL,REVISION,CREATE_USER_ID,
			LAST_UPDATE_USER_ID,LAST_UPDATE_DATE,APP_NAME,
			APP_SCOPE,TENANT_ID,ABO_BOOLD_TYPE,
			RH_BOOLD_TYPE		  ) VALUES (
			#{id,jdbcType=NUMERIC},#{treatTimes,jdbcType=NUMERIC},#{name,jdbcType=VARCHAR},
			#{gender,jdbcType=VARCHAR},#{birthdate,jdbcType=DATE},#{phonenum,jdbcType=VARCHAR},
			#{createDate,jdbcType=DATE},#{cardType,jdbcType=VARCHAR},#{cardNum,jdbcType=VARCHAR},
			#{birthplace,jdbcType=VARCHAR},#{country,jdbcType=VARCHAR},#{nationality,jdbcType=VARCHAR},
			#{marriage,jdbcType=VARCHAR},#{education,jdbcType=VARCHAR},#{patientsSource,jdbcType=VARCHAR},
			#{province,jdbcType=VARCHAR},#{city,jdbcType=VARCHAR},#{district,jdbcType=VARCHAR},
			#{detailAddress,jdbcType=VARCHAR},#{familyPhone,jdbcType=VARCHAR},#{profession,jdbcType=VARCHAR},
			#{identity,jdbcType=VARCHAR},#{company,jdbcType=VARCHAR},#{companyPhone,jdbcType=VARCHAR},
			#{email,jdbcType=VARCHAR},#{contactName,jdbcType=VARCHAR},#{contactAddress,jdbcType=VARCHAR},
			#{contactPhone,jdbcType=VARCHAR},#{contactRelation,jdbcType=VARCHAR},#{paymentMethod,jdbcType=VARCHAR},
			#{clientLevel,jdbcType=VARCHAR},#{revision,jdbcType=NUMERIC},#{createUserId,jdbcType=VARCHAR},
			#{lastUpdateUserId,jdbcType=VARCHAR},#{lastUpdateDate,jdbcType=DATE},#{appName,jdbcType=VARCHAR},
			#{scope,jdbcType=VARCHAR},#{tenantId,jdbcType=VARCHAR},#{aboBooldType,jdbcType=VARCHAR},
			#{rhBooldType,jdbcType=VARCHAR}		  )
	</sql>

	<insert id="insert" parameterType="com.fiberhome.ms.imc.patient.entity.Patient" useGeneratedKeys="true" keyColumn="ID" keyProperty="id">
		<selectKey resultType="long" keyProperty="id" order="BEFORE" databaseId="oracle">
        	SELECT T_PATIENT_S.nextval AS value FROM dual  
		</selectKey>
	
		<include refid="base_insert_sql" />
	</insert>
	
	<update id="update" parameterType="com.fiberhome.ms.imc.patient.entity.Patient">
		UPDATE T_PATIENT_DEMO
		<set>
		  
          REVISION = #{revisionNext,jdbcType=INTEGER},
          LAST_UPDATE_USER_ID = #{currentUserId,jdbcType=NUMERIC},
          LAST_UPDATE_DATE = #{_currentDate},
		</set>
		WHERE ID = #{id,jdbcType=NUMERIC}

	</update>

	<delete id="deleteById">
		DELETE FROM T_PATIENT_DEMO
		WHERE ID = #{id}
	
	</delete>
	
	<delete id="deleteByIds">
		DELETE FROM T_PATIENT_DEMO
		WHERE ID in
	    <foreach item="id" collection="ids" open="(" separator="," close=")">
	     #{id}
	    </foreach>
	  
	</delete>

	<!-- //////////////////////////////////////////////////////////// -->
 
</mapper>

